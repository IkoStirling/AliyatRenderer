
version: 0.1.3

	date: 2025.03.29

	info: 
		目前事件系统已支持：
			1）多线程处理事件
				将来自不同layer的事件分发到对应的工作线程组中，

				扩展点：
					a）重构线程池类，同时使用三个（即时/普通/缓慢）线程池，
						将不同layer划分到这些线程池中
					b）使用配置文件读取线程池创建信息
					c）事件即时处理办法，强即时（当前线程处理）、弱即时（单例线程）

			2）事件附加属性
				目前已支持事件优先级、合并事件、事件层级

				扩展点：
					a）重载new和delete运算符，由于IAYEvent类不能是模板类，
						所以要用到宏，与注册子类类型到父类中
		
		已知问题：
			1）目前事件会大量复制与析构，对内存池需求大
					制作内存池
			2）事件类编写困难，需要子类重构大量方法，而事件子类又会特别多
					使用虚函数+宏+派生类类型注册
			3）事件无法通知到具体实例
					额外维护实体信息，将实体id传递到事件中去，在监听端进行实体id判断
					这样需要一个实体id分配系统（协程id生成器）
					举个例子：
						当Player的两个实例PlayerA，PlayerB同时监听了扣血事件E，
						PlayerB受伤了触发扣血事件，目前情况下PlayerA也会被扣血
			4）事件监听通过IAYEventToken进行RAII处理，因此每个地方必须强制保存该Token
					在类似Object一样的最基类提供方法保存与释放Token（即监听与放弃监听）

		短期期望：
			1）将事件子类的其他方法隐藏掉（clone、merge。。。)
			2）使用工厂办法创建/获取事件系统实例